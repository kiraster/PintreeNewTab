name: Google Extensions

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # 需要写权限才能创建 Release
      issues: read     # 其他相关权限（视情况而定）

    steps:
      # Step 1: 检出代码
      - name: 检出代码
        uses: actions/checkout@v4

      # Step 2: 配置 NodeJS 环境
      - name: 设置 NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: 打印当前文件夹
        run: dir

      # Step 3: 恢复依赖项
      - name: 安装依赖项
        run: npm install

      # Step 4: 构建项目
      - name: 构建项目
        run: npm run build

      # Step 5: 获取标签消息
      - name: 获取标签消息
        id: tag_message
        run: |
          if ($Env:GITHUB_REF -like 'refs/tags/*') {
            $TAG_NAME = $Env:GITHUB_REF.Substring(10)  # 获取标签名称
            $TAG_MESSAGE = git tag -n99 | Select-String "^$TAG_NAME " | ForEach-Object { $_.Line.Substring($TAG_NAME.Length).Trim() }
            Write-Host "TAG_MESSAGE=$TAG_MESSAGE"
            echo "TAG_MESSAGE=$TAG_MESSAGE" >> $GITHUB_ENV  # 设置环境变量
          }


      # Step 6: 上传文件到Release
      - name: 创建 Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: .\.output\*.zip
          body: |
            发布版本: ${{ github.ref_name }}
            说明: ${{ env.TAG_MESSAGE }}  # 使用获取到的标签消息
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Upload Build Artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-Win_x64       # 自定义的上传名称
#          path: Win_x64.zip         # 上传的文件或目录路径